name: Deploy Static Pages

on:
  # master 分至推送时触发
  push:
    branches: ["master"]

  # 允许从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一次并发部署，跳过在进行中的运行和最近排队的运行之间排队的运行。
# 但是，不要取消正在进行的运行，因为我们希望完成这些生产部署。
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认使用 bash
defaults:
  run:
    shell: bash

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      # 部署 Gitee Pages
      - name: 远程部署 Gitee Pages
        uses: yanglbme/gitee-pages-action@main
        with:
          gitee-username: david.no.1@msn.cn
          gitee-password: ${{ secrets.GITEE_PASSWORD }}
          gitee-repo: dnest/dnest
          branch: master
      # 编译 GitHub Pages
      - name: 开始构建 Github Pages
        uses: actions/checkout@v2
      - name: 配置 GitHub Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: 安装 Node.js v18.16.0
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: 缓存 NPM 依赖项
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
      - name: 安装依赖
        run: npm install
      - name: 开始编译
        run: npm run build
      # - name: 编译 Hexo 到 gh-pages 分支
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public
      - name: 上传编译文件
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署至 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2